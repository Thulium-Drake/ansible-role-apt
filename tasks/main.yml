---
- name: 'Set up proxy server'
  ansible.builtin.include_tasks: 'proxy_server.yml'
  when: apt_is_proxy_server

- name: 'Configure APT'
  ansible.builtin.template:
    src: "{{ file['src'] }}"
    dest: "{{ file['dest'] }}"
    owner: 'root'
    group: 'root'
    mode: '0644'
  loop:
    - src: 'apt-periodic.j2'
      dest: '/etc/apt/apt.conf.d/10periodic'
    - src: 'apt-unattended.j2'
      dest: '/etc/apt/apt.conf.d/50unattended-upgrades'
    - src: 'apt-proxy.j2'
      dest: '/etc/apt/apt.conf.d/01proxy'
  loop_control:
    loop_var: 'file'

- name: 'Configure Debian main repos'
  # yamllint disable rule:line-length
  ansible.builtin.copy:
    content: |
      # This file is managed by Ansible.
      # YOUR CHANGES WILL BE LOST!
      Types: deb
      URIs: {{ debian_repo_mirror }}/debian
      Suites: {{ ansible_facts['distribution_release'] }} {{ (debian_testing) | ternary('', ansible_facts['distribution_release'] + '-updates') }} {{ (debian_backports_enabled) | ternary(ansible_facts['distribution_release'] + '-backports', '') }}
      Components: {{ debian_repo_components }}

      Types: deb
      URIs: {{ debian_repo_mirror }}/debian-security
      Suites: {{ ansible_facts['distribution_release'] }}-security
      Components: {{ debian_repo_components }}
    dest: '/etc/apt/sources.list.d/debian.sources'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Update apt cache'
  when:
    - ansible_facts['distribution'] == "Debian"
    - not is_raspbian

- name: 'Configure Raspbian main repos'
  ansible.builtin.copy:
    content: |
      # This file is managed by Ansible.
      # YOUR CHANGES WILL BE LOST!
      Types: deb
      URIs: {{ raspbian_repo_mirror }}/raspbian
      Suites: {{ ansible_facts['distribution_release'] }}
      Components: {{ raspbian_repo_components }}
    dest: '/etc/apt/sources.list.d/raspbian.sources'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Update apt cache'
  when:
    - ansible_facts['distribution'] == "Debian"
    - is_raspbian

- name: 'Configure Ubuntu main repos'
  ansible.builtin.copy:
  # yamllint disable rule:line-length
    content: |
      # This file is managed by Ansible.
      # YOUR CHANGES WILL BE LOST!
      Types: deb
      URIs: {{ ubuntu_repo_mirror }}/ubuntu
      Suites: {{ ansible_facts['distribution_release'] }} {{ ansible_facts['distribution_release'] }}-updates {{ ansible_facts['distribution_release'] }}-security
      Components: {{ ubuntu_repo_components }}
    dest: '/etc/apt/sources.list.d/ubuntu.sources'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Update apt cache'
  when: ansible_facts['distribution'] == "Ubuntu"

- name: 'Clean up default sources'
  ansible.builtin.template:
    src: 'sources.list.j2'
    dest: '/etc/apt/sources.list'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Purge legacy *.list files'
  when: apt_purge_legacy_repos
  block:
    - name: 'List repo files'
      ansible.builtin.find:
        path: '/etc/apt/sources.list.d'
        pattern: '*.list'
        get_checksum: false
      register: 'repo_files'

    - name: 'Purge repo files'
      ansible.builtin.file:
        path: "{{ repo_file['path'] }}"
        state: 'absent'
      loop: "{{ repo_files['files'] }}"
      loop_control:
        loop_var: 'repo_file'

- name: 'Update sources if required'
  ansible.builtin.meta: 'flush_handlers'

- name: 'Install supporting packages'
  ansible.builtin.apt:
    name:
      - 'dirmngr'
      - 'unattended-upgrades'
      - 'curl'
    state: 'present'

- name: 'Configure repo keys from keyserver'
  ansible.builtin.uri:
    url: "http://{{ repository_keyserver }}/pks/lookup?op=get&search=0x{{ repo_key['keyserver_id'] }}"
    dest: "/etc/apt/keyrings/{{ repo_key['name'] }}.asc"
    status_code:
      - 200
      - 304
  environment:
    http_proxy: "{{ apt_proxy_url | default(omit) }}"
    https_proxy: "{{ apt_proxy_url | default(omit) }}"
  loop: "{{ apt_other_repos | default([]) }}"
  loop_control:
    loop_var: 'repo_key'
  when: repo_key['keyserver_id'] is defined

- name: 'Configure repo keys from URLs'
  ansible.builtin.uri:
    url: "{{ repo_key['key_url'] }}"
    dest: "/etc/apt/keyrings/{{ repo_key['name'] }}.{{ (repo_key['key_armored'] | default(true)) | ternary('asc', 'gpg') }}"
    status_code:
      - 200
      - 304
  environment:
    http_proxy: "{{ apt_proxy_url | default(omit) }}"
    https_proxy: "{{ apt_proxy_url | default(omit) }}"
  loop: "{{ apt_other_repos | default([]) }}"
  loop_control:
    loop_var: 'repo_key'
  when: repo_key['key_url'] is defined

- name: 'Configure other repos'
  ansible.builtin.copy:
    content: |
      # This file is managed by Ansible.
      # YOUR CHANGES WILL BE LOST!
      Types: deb
      URIs: {{ repo['url'] }}
      Suites: {{ repo['release'] }}
      Components: {{ repo['repos'] }}
      Signed-By: /etc/apt/keyrings/{{ repo['name'] }}.{{ (repo['key_armored'] | default(true)) | ternary('asc', 'gpg') }}
      {{ (repo['arch'] | default('') | length > 0) | ternary('Architectures:' + repo['arch'] | default(''), '') }}
    dest: "/etc/apt/sources.list.d/{{ repo['name'] }}.sources"
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Update apt cache'
  loop: "{{ apt_other_repos | default([]) }}"
  loop_control:
    loop_var: 'repo'
  when: apt_other_repos | length > 0

- name: 'Disable apt-listchanges'
  ansible.builtin.apt:
    name: 'apt-listchanges'
    state: 'absent'
    purge: true
  when: not apt_listchanges_installed

- name: 'Enable apt-listchanges'
  ansible.builtin.apt:
    name: 'apt-listchanges'
    state: 'present'
  when: apt_listchanges_installed
