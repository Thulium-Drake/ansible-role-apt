---
# List of repositories
# This variable is set by merging vars that end with _apt_other_repos
# to the list below. E.g.
#
# example_apt_other_repos__to_merge:
#   - name: 'example-keyserver_id'
#     url: 'http://repository.example.com'
#     release: 'stable'
#     repos: 'main'
#     arch: 'amd64'
#     keyserver_id: 'xxx'   # Downloads the key from a keyserver
#   - name: 'example-key_url'
#     url: 'http://repository.example.net'
#     release: 'stable'
#     repos: 'main'
#     key_url: 'http://example.net/pub.asc'  # Downloads the key from a URL
#   - name: 'example-unarmored-gpg-key'
#     url: 'http://repository.example.net'
#     release: 'stable'
#     repos: 'main'
#     key_url: 'http://example.net/pub.gpg'
#     key_armored: false  # defaults to true
#   - name: 'example-gpg-keyfile'
#     url: 'http://repository.example.net'
#     release: 'stable'
#     repos: 'main'
#     key_file: '/etc/apt/trusted.gpg.d/example.gpg'  # If the key file is already present on the system

#
# A list of repositories that bypass the proxy (e.g. local repos)
# example_apt_proxy_direct__to_merge:
#   - 'https://localrepo.example.com'

# URL of the proxy to configure, set to '' to disable
apt_proxy_url: ''

# Which base mirror to use for Debian and Ubuntu
debian_repo_mirror: 'http://ftp.nl.debian.org'
debian_repo_components: 'main contrib non-free non-free-firmware'
ubuntu_repo_mirror: 'http://archive.ubuntu.com'
ubuntu_repo_components: 'main restricted universe multiverse'

# Change logic of the role to suit Raspbian
is_raspbian: false
raspbian_repo_mirror: 'http://raspbian.raspberrypi.org'
raspbian_repo_components: 'main contrib non-free rpi'

# Enable Debian Backports
debian_backports_enabled: false

# Disable debian/updates repository (use in case of Debian Testing/Unstable)
debian_testing: false

# Which keyserver to use
repository_keyserver: 'keyserver.ubuntu.com'

# Send daily email reports for available upgrades
apt_listchanges_installed: false

# Purge old-style .list repo files
apt_purge_legacy_repos: false

# Unattended upgrades settings
#  - Enable the update/upgrade script (0=disable)
apt_periodic_enable: 1

#  - Send report mail to root
#      0:  no report             (or null string)
#      1:  progress report       (actually any string)
#      2:  + command outputs     (remove -qq, remove 2>/dev/null, add -d)
#      3:  + trace on
apt_periodic_verbose: 0

#  - Do "apt-get update" automatically every n-days (0=disable)
apt_periodic_update: 1

#  - Run the "unattended-upgrade" security upgrade script
#    every n-days (0=disabled)
apt_periodic_upgradeinterval: 1

#  - Do "apt-get upgrade --download-only" every n-days (0=disable)
apt_periodic_download: 1

#  - Use debdelta-upgrade to download updates if available (0=disable)
apt_periodic_debdelta: 1

#  - Backup after n-days if archive contents changed.(0=disable)
apt_periodic_backupinterval: 0

#  - Backup level.(0=disable), 1 is invalid.
apt_periodic_backuplevel: 3

#  - Do "apt-get autoclean" every n-days (0=disable)
apt_periodic_cleaninterval: 7

#  - Set maximum allowed age of a cache package file. (0=disable)
apt_periodic_maxage: 0

#  - Set minimum age of a package file. If a file is younger it
#    will not be deleted (0=disable).
apt_periodic_minage: 0

#  - Set maximum size of the cache in MB (0=disable).
apt_periodic_maxsize: 0

# Which update origins are automatically installed
apt_unattended_origins:
  - "origin=Example Repo,label=Internal"

# Which packages are blacklisted for automatic upgrades
apt_unattended_package_blacklist:
  - ''

# Run 'dpkg --force-confold --configure -a' before updating
apt_unattended_fix_interrupted_dpkg: true

# Run the upgrade in small steps, so it can be safely interrupted
apt_unattended_minimal_steps: false

# Run the upgrade on system shutdown
apt_unattended_on_shutdown: false

# Email address to send reports to
apt_unattended_mail_address: 'root@localhost'

# Only send email on failure
apt_unattended_mail_onlyonerror: true

# Run 'apt-get autoremove' after upgrading
apt_unattended_remove_unused_deps: true

# Automatically reboot the system, WARNING: WITHOUT CONFIRMATION!
apt_unattended_autoreboot: false

# If enabled, reboot at the following time
apt_unattended_autoreboot_time: '02:00'

# Limit APT's bandwidth usage, e.g. 5000 Kbit/sec
apt_unattended_downloadlimit: 5000

###
# Proxy server section
###
# The system for which this is true will be set up as the proxy server
apt_is_proxy_server: false

# Enable object caching
apt_proxy_cache_enabled: true

# Directory to store all cached objects
apt_proxy_cache_dir: '/var/lib/squid-deb-proxy'

# Enable domain filtering
apt_proxy_whitelist_enabled: true

# A list of domains to whitelist in the proxy
apt_proxy_whitelist:
  - 'ftp.nl.debian.org'
  - 'archive.ubuntu.com'
  - '.raspberrypi.org'

# A list of packages that are blacklisted
apt_proxy_package_blacklist:
  - 'nonexisting'

apt_proxy_allowed_networks:
  - '10.0.0.0/8'
  - 'fe80::/10'
  - '::1'
  - '127.0.0.1'
